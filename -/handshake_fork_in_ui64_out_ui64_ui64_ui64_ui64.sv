// Generated by CIRCT unknown git version
module handshake_fork_in_ui64_out_ui64_ui64_ui64_ui64(
  input  [63:0] in0,
  input         in0_valid,
                clock,
                reset,
                out0_ready,
                out1_ready,
                out2_ready,
                out3_ready,
  output        in0_ready,
  output [63:0] out0,
  output        out0_valid,
  output [63:0] out1,
  output        out1_valid,
  output [63:0] out2,
  output        out2_valid,
  output [63:0] out3,
  output        out3_valid
);

  wire allDone;
  wire done3;
  reg  emitted_0;
  wire _GEN = ~emitted_0 & in0_valid;
  wire done0 = out0_ready & _GEN | emitted_0;
  reg  emitted_1;
  wire _GEN_0 = ~emitted_1 & in0_valid;
  wire done1 = out1_ready & _GEN_0 | emitted_1;
  reg  emitted_2;
  wire _GEN_1 = ~emitted_2 & in0_valid;
  wire done2 = out2_ready & _GEN_1 | emitted_2;
  reg  emitted_3;
  always_ff @(posedge clock) begin
    if (reset) begin
      emitted_0 <= 1'h0;
      emitted_1 <= 1'h0;
      emitted_2 <= 1'h0;
      emitted_3 <= 1'h0;
    end
    else begin
      emitted_0 <= done0 & ~allDone;
      emitted_1 <= done1 & ~allDone;
      emitted_2 <= done2 & ~allDone;
      emitted_3 <= done3 & ~allDone;
    end
  end // always_ff @(posedge)
  wire _GEN_2 = ~emitted_3 & in0_valid;
  assign done3 = out3_ready & _GEN_2 | emitted_3;
  assign allDone = done0 & done1 & done2 & done3;
  assign in0_ready = allDone;
  assign out0 = in0;
  assign out0_valid = _GEN;
  assign out1 = in0;
  assign out1_valid = _GEN_0;
  assign out2 = in0;
  assign out2_valid = _GEN_1;
  assign out3 = in0;
  assign out3_valid = _GEN_2;
endmodule

