// Generated by CIRCT unknown git version
module handshake_fork_1ins_15outs_ctrl(
  // input  /*Zero Width*/ in0,
     input                 in0_valid,
                           clock,
                           reset,
                           out0_ready,
                           out1_ready,
                           out2_ready,
                           out3_ready,
                           out4_ready,
                           out5_ready,
                           out6_ready,
                           out7_ready,
                           out8_ready,
                           out9_ready,
                           out10_ready,
                           out11_ready,
                           out12_ready,
                           out13_ready,
                           out14_ready,
     output                in0_ready,
  // output /*Zero Width*/ out0,
     output                out0_valid,
  // output /*Zero Width*/ out1,
     output                out1_valid,
  // output /*Zero Width*/ out2,
     output                out2_valid,
  // output /*Zero Width*/ out3,
     output                out3_valid,
  // output /*Zero Width*/ out4,
     output                out4_valid,
  // output /*Zero Width*/ out5,
     output                out5_valid,
  // output /*Zero Width*/ out6,
     output                out6_valid,
  // output /*Zero Width*/ out7,
     output                out7_valid,
  // output /*Zero Width*/ out8,
     output                out8_valid,
  // output /*Zero Width*/ out9,
     output                out9_valid,
  // output /*Zero Width*/ out10,
     output                out10_valid,
  // output /*Zero Width*/ out11,
     output                out11_valid,
  // output /*Zero Width*/ out12,
     output                out12_valid,
  // output /*Zero Width*/ out13,
     output                out13_valid,
  // output /*Zero Width*/ out14,
     output                out14_valid
);

  wire allDone;
  wire done14;
  reg  emitted_0;
  wire _GEN = ~emitted_0 & in0_valid;
  wire done0 = out0_ready & _GEN | emitted_0;
  reg  emitted_1;
  wire _GEN_0 = ~emitted_1 & in0_valid;
  wire done1 = out1_ready & _GEN_0 | emitted_1;
  reg  emitted_2;
  wire _GEN_1 = ~emitted_2 & in0_valid;
  wire done2 = out2_ready & _GEN_1 | emitted_2;
  reg  emitted_3;
  wire _GEN_2 = ~emitted_3 & in0_valid;
  wire done3 = out3_ready & _GEN_2 | emitted_3;
  reg  emitted_4;
  wire _GEN_3 = ~emitted_4 & in0_valid;
  wire done4 = out4_ready & _GEN_3 | emitted_4;
  reg  emitted_5;
  wire _GEN_4 = ~emitted_5 & in0_valid;
  wire done5 = out5_ready & _GEN_4 | emitted_5;
  reg  emitted_6;
  wire _GEN_5 = ~emitted_6 & in0_valid;
  wire done6 = out6_ready & _GEN_5 | emitted_6;
  reg  emitted_7;
  wire _GEN_6 = ~emitted_7 & in0_valid;
  wire done7 = out7_ready & _GEN_6 | emitted_7;
  reg  emitted_8;
  wire _GEN_7 = ~emitted_8 & in0_valid;
  wire done8 = out8_ready & _GEN_7 | emitted_8;
  reg  emitted_9;
  wire _GEN_8 = ~emitted_9 & in0_valid;
  wire done9 = out9_ready & _GEN_8 | emitted_9;
  reg  emitted_10;
  wire _GEN_9 = ~emitted_10 & in0_valid;
  wire done10 = out10_ready & _GEN_9 | emitted_10;
  reg  emitted_11;
  wire _GEN_10 = ~emitted_11 & in0_valid;
  wire done11 = out11_ready & _GEN_10 | emitted_11;
  reg  emitted_12;
  wire _GEN_11 = ~emitted_12 & in0_valid;
  wire done12 = out12_ready & _GEN_11 | emitted_12;
  reg  emitted_13;
  wire _GEN_12 = ~emitted_13 & in0_valid;
  wire done13 = out13_ready & _GEN_12 | emitted_13;
  reg  emitted_14;
  always_ff @(posedge clock) begin
    if (reset) begin
      emitted_0 <= 1'h0;
      emitted_1 <= 1'h0;
      emitted_2 <= 1'h0;
      emitted_3 <= 1'h0;
      emitted_4 <= 1'h0;
      emitted_5 <= 1'h0;
      emitted_6 <= 1'h0;
      emitted_7 <= 1'h0;
      emitted_8 <= 1'h0;
      emitted_9 <= 1'h0;
      emitted_10 <= 1'h0;
      emitted_11 <= 1'h0;
      emitted_12 <= 1'h0;
      emitted_13 <= 1'h0;
      emitted_14 <= 1'h0;
    end
    else begin
      emitted_0 <= done0 & ~allDone;
      emitted_1 <= done1 & ~allDone;
      emitted_2 <= done2 & ~allDone;
      emitted_3 <= done3 & ~allDone;
      emitted_4 <= done4 & ~allDone;
      emitted_5 <= done5 & ~allDone;
      emitted_6 <= done6 & ~allDone;
      emitted_7 <= done7 & ~allDone;
      emitted_8 <= done8 & ~allDone;
      emitted_9 <= done9 & ~allDone;
      emitted_10 <= done10 & ~allDone;
      emitted_11 <= done11 & ~allDone;
      emitted_12 <= done12 & ~allDone;
      emitted_13 <= done13 & ~allDone;
      emitted_14 <= done14 & ~allDone;
    end
  end // always_ff @(posedge)
  wire _GEN_13 = ~emitted_14 & in0_valid;
  assign done14 = out14_ready & _GEN_13 | emitted_14;
  assign allDone =
    done0 & done1 & done2 & done3 & done4 & done5 & done6 & done7 & done8 & done9 & done10
    & done11 & done12 & done13 & done14;
  assign in0_ready = allDone;
  // Zero width: assign out0 = in0;
  assign out0_valid = _GEN;
  // Zero width: assign out1 = in0;
  assign out1_valid = _GEN_0;
  // Zero width: assign out2 = in0;
  assign out2_valid = _GEN_1;
  // Zero width: assign out3 = in0;
  assign out3_valid = _GEN_2;
  // Zero width: assign out4 = in0;
  assign out4_valid = _GEN_3;
  // Zero width: assign out5 = in0;
  assign out5_valid = _GEN_4;
  // Zero width: assign out6 = in0;
  assign out6_valid = _GEN_5;
  // Zero width: assign out7 = in0;
  assign out7_valid = _GEN_6;
  // Zero width: assign out8 = in0;
  assign out8_valid = _GEN_7;
  // Zero width: assign out9 = in0;
  assign out9_valid = _GEN_8;
  // Zero width: assign out10 = in0;
  assign out10_valid = _GEN_9;
  // Zero width: assign out11 = in0;
  assign out11_valid = _GEN_10;
  // Zero width: assign out12 = in0;
  assign out12_valid = _GEN_11;
  // Zero width: assign out13 = in0;
  assign out13_valid = _GEN_12;
  // Zero width: assign out14 = in0;
  assign out14_valid = _GEN_13;
endmodule

