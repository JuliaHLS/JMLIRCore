// Generated by CIRCT unknown git version
module handshake_buffer_in_ui64_out_ui64_2slots_seq(	// -:2:45
  input  [63:0] in0,
  input         in0_valid,
                clock,
                reset,
                out0_ready,
  output        in0_ready,
  output [63:0] out0,
  output        out0_valid
);

  reg         ready1_reg;	// -:2:45
  reg         ready0_reg;	// -:2:45
  reg         valid0_reg;	// -:2:45
  wire        _GEN = ~valid0_reg | ~ready0_reg;	// -:2:45
  reg  [63:0] data0_reg;	// -:2:45
  reg  [63:0] ctrl_data0_reg;	// -:2:45
  reg         valid1_reg;	// -:2:45
  wire        _GEN_0 = ~valid1_reg | ~ready1_reg;	// -:2:45
  reg  [63:0] data1_reg;	// -:2:45
  reg  [63:0] ctrl_data1_reg;	// -:2:45
  always_ff @(posedge clock) begin	// -:2:45
    if (reset) begin	// -:2:45
      valid0_reg <= 1'h0;	// -:2:45
      data0_reg <= 64'h0;	// -:2:45
      ready0_reg <= 1'h0;	// -:2:45
      ctrl_data0_reg <= 64'h0;	// -:2:45
      valid1_reg <= 1'h0;	// -:2:45
      data1_reg <= 64'h0;	// -:2:45
      ready1_reg <= 1'h0;	// -:2:45
      ctrl_data1_reg <= 64'h0;	// -:2:45
    end
    else begin	// -:2:45
      automatic logic _GEN_1 = ~_GEN_0 & ~ready0_reg;	// -:2:45
      automatic logic _GEN_2 = _GEN_0 & ready0_reg;	// -:2:45
      automatic logic _GEN_3 = ~out0_ready & ~ready1_reg;	// -:2:45
      automatic logic _GEN_4 = out0_ready & ready1_reg;	// -:2:45
      valid0_reg <= _GEN ? in0_valid : valid0_reg;	// -:2:45
      data0_reg <= _GEN ? in0 : data0_reg;	// -:2:45
      ready0_reg <= ~_GEN_2 & (_GEN_1 ? valid0_reg : ready0_reg);	// -:2:45
      ctrl_data0_reg <= _GEN_2 ? 64'h0 : _GEN_1 ? data0_reg : ctrl_data0_reg;	// -:2:45
      valid1_reg <= _GEN_0 ? (ready0_reg ? ready0_reg : valid0_reg) : valid1_reg;	// -:2:45
      data1_reg <= _GEN_0 ? (ready0_reg ? ctrl_data0_reg : data0_reg) : data1_reg;	// -:2:45
      ready1_reg <= ~_GEN_4 & (_GEN_3 ? valid1_reg : ready1_reg);	// -:2:45
      ctrl_data1_reg <= _GEN_4 ? 64'h0 : _GEN_3 ? data1_reg : ctrl_data1_reg;	// -:2:45
    end
  end // always_ff @(posedge)
  assign in0_ready = _GEN;	// -:2:45
  assign out0 = ready1_reg ? ctrl_data1_reg : data1_reg;	// -:2:45
  assign out0_valid = ready1_reg ? ready1_reg : valid1_reg;	// -:2:45
endmodule

